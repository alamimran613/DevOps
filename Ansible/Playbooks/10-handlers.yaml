# Playbook to provision servers and configure NTP agent

- name: Provisioning Servers
  hosts: all
  become: yes
  tasks:
    # Task to install NTP Agent on CentOS
    - name: Install NTP Agent on CentOS
      yum:
        name: "{{item}}"
        state: present
      when: ansible_distribution == "CentOS"   
      loop:
        - chrony
        - wget
        - git
        - zip
        - unzip

    # Task to install NTP Agent on Ubuntu
    - name: Install NTP Agent on Ubuntu
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes   
      when: ansible_distribution == "Ubuntu"   
      loop:
        - ntp
        - wget
        - git
        - zip
        - unzip

    # Task to start NTP service on CentOS
    - name: Start Service on CentOS
      service:
        name: chronyd
        state: started
        enabled: yes
      when: ansible_distribution == "CentOS"   

    # Task to start NTP service on Ubuntu
    - name: Start Service on Ubuntu
      service:
        name: ntp
        state: started
        enabled: yes
      when: ansible_distribution == "Ubuntu"

    # Task to create a banner file
    - name: Banner file
      copy:
        content: '# This server is managed by ansible. No manual changes please'
        dest: /etc/motd 
    
    # Task to create a directory if it doesn't exist
    - name: Create a directory that does not exist
      file:
        path: /opt/test21
        state: directory
    
    # Task to deploy NTP agent conf on CentOS
    - name: Deploy NTP agent conf on CentOS
      template:
        src: templates/ntpconf_centos
        dest: /etc/chrony.conf
        backup: yes
      when: ansible_distribution == "CentOS"
      notify:
        - ReStart Service on CentOS

    # Task to deploy NTP agent conf on Ubuntu
    - name: Deploy NTP agent conf on Ubuntu
      template:
        src: templates/ntpconf_ubuntu
        dest: /etc/ntp.conf
        backup: yes
      when: ansible_distribution == "Ubuntu"
      notify:
        - ReStart Service on Ubuntu
    
  handlers:
    # Handler to restart NTP service on CentOS
    - name: ReStart Service on CentOS
      service:
        name: chronyd
        state: restarted
        enabled: yes
      when: ansible_distribution == "CentOS"   

    # Handler to restart NTP service on Ubuntu
    - name: ReStart Service on Ubuntu
      service:
        name: ntp
        state: restarted
        enabled: yes
      when: ansible_distribution == "Ubuntu"
